// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Repositories;

namespace Model.Migrations
{
    [DbContext(typeof(CultuurHuisMVCContext))]
    [Migration("20210527090453_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Genre", b =>
                {
                    b.Property<int>("GenreNr")
                        .HasColumnType("int");

                    b.Property<string>("Genre1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Genre");

                    b.HasKey("GenreNr");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Models.Klanten", b =>
                {
                    b.Property<int>("KlantNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Familienaam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GebruikersNaam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gemeente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HuisNr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Paswoord")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Straat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("KlantNr");

                    b.ToTable("Klanten");
                });

            modelBuilder.Entity("Models.Reservaty", b =>
                {
                    b.Property<int>("ReservatieNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KlantNr")
                        .HasColumnType("int");

                    b.Property<short>("Plaatsen")
                        .HasColumnType("smallint");

                    b.Property<int>("VoorstellingsNr")
                        .HasColumnType("int");

                    b.HasKey("ReservatieNr");

                    b.HasIndex("KlantNr");

                    b.HasIndex("VoorstellingsNr");

                    b.ToTable("Reservaties");
                });

            modelBuilder.Entity("Models.Voorstellingen", b =>
                {
                    b.Property<int>("VoorstellingsNr")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("GenreNr")
                        .HasColumnType("int");

                    b.Property<decimal>("Prijs")
                        .HasColumnType("money");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uitvoerders")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("VrijePlaatsen")
                        .HasColumnType("smallint");

                    b.HasKey("VoorstellingsNr");

                    b.HasIndex("GenreNr");

                    b.ToTable("Voorstellingen");
                });

            modelBuilder.Entity("Models.Reservaty", b =>
                {
                    b.HasOne("Models.Klanten", "KlantNrNavigation")
                        .WithMany("Reservaties")
                        .HasForeignKey("KlantNr")
                        .HasConstraintName("FK_Reservaties_Klanten")
                        .IsRequired();

                    b.HasOne("Models.Voorstellingen", "VoorstellingsNrNavigation")
                        .WithMany("Reservaties")
                        .HasForeignKey("VoorstellingsNr")
                        .HasConstraintName("FK_Reservaties_Voorstellingen")
                        .IsRequired();

                    b.Navigation("KlantNrNavigation");

                    b.Navigation("VoorstellingsNrNavigation");
                });

            modelBuilder.Entity("Models.Voorstellingen", b =>
                {
                    b.HasOne("Models.Genre", "GenreNrNavigation")
                        .WithMany("Voorstellingens")
                        .HasForeignKey("GenreNr")
                        .HasConstraintName("FK_Voorstellingen_Genres")
                        .IsRequired();

                    b.Navigation("GenreNrNavigation");
                });

            modelBuilder.Entity("Models.Genre", b =>
                {
                    b.Navigation("Voorstellingens");
                });

            modelBuilder.Entity("Models.Klanten", b =>
                {
                    b.Navigation("Reservaties");
                });

            modelBuilder.Entity("Models.Voorstellingen", b =>
                {
                    b.Navigation("Reservaties");
                });
#pragma warning restore 612, 618
        }
    }
}
